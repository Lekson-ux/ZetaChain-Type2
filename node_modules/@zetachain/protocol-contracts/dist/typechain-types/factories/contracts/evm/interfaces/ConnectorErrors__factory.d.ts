import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ConnectorErrors, ConnectorErrorsInterface } from "../../../../contracts/evm/interfaces/ConnectorErrors";
export declare class ConnectorErrors__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }];
        readonly name: "CallerIsNotPauser";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }];
        readonly name: "CallerIsNotTss";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }];
        readonly name: "CallerIsNotTssOrUpdater";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }];
        readonly name: "CallerIsNotTssUpdater";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "maxSupply";
            readonly type: "uint256";
        }];
        readonly name: "ExceedsMaxSupply";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ZetaTransferError";
        readonly type: "error";
    }];
    static createInterface(): ConnectorErrorsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ConnectorErrors;
}
