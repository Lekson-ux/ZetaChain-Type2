import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ZetaTokenConsumerTridentErrors, ZetaTokenConsumerTridentErrorsInterface } from "../../../../../contracts/evm/tools/ZetaTokenConsumerTrident.strategy.sol/ZetaTokenConsumerTridentErrors";
export declare class ZetaTokenConsumerTridentErrors__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "ErrorSendingETH";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InputCantBeZero";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ReentrancyError";
        readonly type: "error";
    }];
    static createInterface(): ZetaTokenConsumerTridentErrorsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ZetaTokenConsumerTridentErrors;
}
