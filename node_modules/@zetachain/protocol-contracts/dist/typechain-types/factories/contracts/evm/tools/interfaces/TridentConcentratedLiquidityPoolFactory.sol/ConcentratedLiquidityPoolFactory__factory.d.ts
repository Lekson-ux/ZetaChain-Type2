import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ConcentratedLiquidityPoolFactory, ConcentratedLiquidityPoolFactoryInterface } from "../../../../../../contracts/evm/tools/interfaces/TridentConcentratedLiquidityPoolFactory.sol/ConcentratedLiquidityPoolFactory";
export declare class ConcentratedLiquidityPoolFactory__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "token0";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "token1";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "startIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "count";
            readonly type: "uint256";
        }];
        readonly name: "getPools";
        readonly outputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "pairPools";
            readonly type: "address[]";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): ConcentratedLiquidityPoolFactoryInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ConcentratedLiquidityPoolFactory;
}
