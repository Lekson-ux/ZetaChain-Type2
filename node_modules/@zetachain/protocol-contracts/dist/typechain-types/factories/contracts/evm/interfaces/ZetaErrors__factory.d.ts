import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ZetaErrors, ZetaErrorsInterface } from "../../../../contracts/evm/interfaces/ZetaErrors";
export declare class ZetaErrors__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }];
        readonly name: "CallerIsNotConnector";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }];
        readonly name: "CallerIsNotTss";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }];
        readonly name: "CallerIsNotTssOrUpdater";
        readonly type: "error";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }];
        readonly name: "CallerIsNotTssUpdater";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ZetaTransferError";
        readonly type: "error";
    }];
    static createInterface(): ZetaErrorsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ZetaErrors;
}
