import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type { ZetaReceiverMock, ZetaReceiverMockInterface } from "../../../../contracts/evm/testing/ZetaReceiverMock";
type ZetaReceiverMockConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class ZetaReceiverMock__factory extends ContractFactory {
    constructor(...args: ZetaReceiverMockConstructorParams);
    deploy(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<ZetaReceiverMock>;
    getDeployTransaction(overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): ZetaReceiverMock;
    connect(signer: Signer): ZetaReceiverMock__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b506102d5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633749c51a1461003b5780633ff0693c14610057575b600080fd5b6100556004803603810190610050919061018b565b610073565b005b610071600480360381019061006c91906101d4565b6100bf565b005b7f72a301dee3abcbe15615f3e253229bf4b4f508460603d674991c9a777b833c6e8160400160208101906100a7919061015e565b6040516100b4919061022c565b60405180910390a150565b7f53bd04e26f94f13ff43da96839541821041c309c6f624712192cbe3a2d133cc48160000160208101906100f3919061015e565b604051610100919061022c565b60405180910390a150565b60008135905061011a81610288565b92915050565b600060a0828403121561013657610135610279565b5b81905092915050565b600060c0828403121561015557610154610279565b5b81905092915050565b60006020828403121561017457610173610283565b5b60006101828482850161010b565b91505092915050565b6000602082840312156101a1576101a0610283565b5b600082013567ffffffffffffffff8111156101bf576101be61027e565b5b6101cb84828501610120565b91505092915050565b6000602082840312156101ea576101e9610283565b5b600082013567ffffffffffffffff8111156102085761020761027e565b5b6102148482850161013f565b91505092915050565b61022681610247565b82525050565b6000602082019050610241600083018461021d565b92915050565b600061025282610259565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b600080fd5b600080fd5b61029181610247565b811461029c57600080fd5b5056fea264697066735822122008485e037d9a20d8e9f8d1e9456b89006367d84f7e0966e1d820fe73c0d706ea64736f6c63430008070033";
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "destinationAddress";
            readonly type: "address";
        }];
        readonly name: "MockOnZetaMessage";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "zetaTxSenderAddress";
            readonly type: "address";
        }];
        readonly name: "MockOnZetaRevert";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "zetaTxSenderAddress";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "sourceChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "address";
                readonly name: "destinationAddress";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "zetaValue";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "message";
                readonly type: "bytes";
            }];
            readonly internalType: "struct ZetaInterfaces.ZetaMessage";
            readonly name: "zetaMessage";
            readonly type: "tuple";
        }];
        readonly name: "onZetaMessage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "zetaTxSenderAddress";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "sourceChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "destinationAddress";
                readonly type: "bytes";
            }, {
                readonly internalType: "uint256";
                readonly name: "destinationChainId";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "remainingZetaValue";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "message";
                readonly type: "bytes";
            }];
            readonly internalType: "struct ZetaInterfaces.ZetaRevert";
            readonly name: "zetaRevert";
            readonly type: "tuple";
        }];
        readonly name: "onZetaRevert";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ZetaReceiverMockInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ZetaReceiverMock;
}
export {};
