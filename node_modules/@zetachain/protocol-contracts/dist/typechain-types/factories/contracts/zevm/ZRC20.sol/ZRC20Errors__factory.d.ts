import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ZRC20Errors, ZRC20ErrorsInterface } from "../../../../contracts/zevm/ZRC20.sol/ZRC20Errors";
export declare class ZRC20Errors__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "CallerIsNotFungibleModule";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "GasFeeTransferFailed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "InvalidSender";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "LowAllowance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "LowBalance";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ZeroAddress";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ZeroGasCoin";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ZeroGasPrice";
        readonly type: "error";
    }];
    static createInterface(): ZRC20ErrorsInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ZRC20Errors;
}
