import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ZContract, ZContractInterface } from "../../../../contracts/zevm/interfaces/ZContract";
export declare class ZContract__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "origin";
                readonly type: "bytes";
            }, {
                readonly internalType: "address";
                readonly name: "sender";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "chainID";
                readonly type: "uint256";
            }];
            readonly internalType: "struct zContext";
            readonly name: "context";
            readonly type: "tuple";
        }, {
            readonly internalType: "address";
            readonly name: "zrc20";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "message";
            readonly type: "bytes";
        }];
        readonly name: "onCrossChainCall";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): ZContractInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ZContract;
}
