"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.cctxTask = void 0;
const eventemitter3_1 = __importDefault(require("eventemitter3"));
const config_1 = require("hardhat/config");
const spinnies_1 = __importDefault(require("spinnies"));
const helpers_1 = require("../helpers");
const trackCCTXInteractive = async (hash, json = false) => {
    const s = new spinnies_1.default();
    const emitter = new eventemitter3_1.default();
    emitter
        .on("search-add", ({ text }) => s.add(`search`, { text }))
        .on("search-end", ({ text }) => s.succeed(`search`, { text }))
        .on("add", ({ hash, text }) => s.add(hash, { text }))
        .on("succeed", ({ hash, text }) => s.succeed(hash, { text }))
        .on("fail", ({ hash, text }) => s.fail(hash, { text }))
        .on("update", ({ hash, text }) => s.update(hash, { text }));
    await (0, helpers_1.trackCCTX)(hash, json, emitter);
};
const main = async (args) => {
    await trackCCTXInteractive(args.tx, args.json);
};
exports.cctxTask = (0, config_1.task)("cctx", "Track cross-chain transaction status", main)
    .addPositionalParam("tx", "Hash of an inbound or a cross-chain transaction")
    .addFlag("json", "Output as JSON");
