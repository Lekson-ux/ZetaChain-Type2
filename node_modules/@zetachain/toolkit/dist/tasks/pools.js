"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.poolsTask = void 0;
const protocol_contracts_1 = require("@zetachain/protocol-contracts");
const utils_1 = require("ethers/lib/utils");
const config_1 = require("hardhat/config");
const balances_1 = require("../helpers/balances");
const pools_1 = require("../helpers/pools");
const main = async (args, hre) => {
    const foreignCoins = await (0, balances_1.getForeignCoins)();
    const pools = await (0, pools_1.getPools)();
    const addressToInfo = foreignCoins.reduce((acc, coin) => {
        acc[coin.zrc20_contract_address.toLowerCase()] = {
            decimals: coin.decimals,
            symbol: coin.symbol,
        };
        return acc;
    }, {});
    const wzeta = (0, protocol_contracts_1.getAddress)("zetaToken", "zeta_testnet");
    const WZETA_ADDRESS = wzeta.toLowerCase();
    addressToInfo[WZETA_ADDRESS] = { decimals: 18, symbol: "WZETA" };
    const poolsWithSymbolsAndDecimals = pools.map((pool) => {
        pool.t0.reserve = (0, utils_1.formatUnits)(pool.t0.reserve, pool.t0.decimals);
        pool.t1.reserve = (0, utils_1.formatUnits)(pool.t1.reserve, pool.t1.decimals);
        const t0Info = addressToInfo[pool.t0.address.toLowerCase()] || {
            decimals: 18,
            symbol: "Unknown",
        };
        const t1Info = addressToInfo[pool.t1.address.toLowerCase()] || {
            decimals: 18,
            symbol: "Unknown",
        };
        return {
            ...pool,
            t0: { ...pool.t0, ...t0Info },
            t1: { ...pool.t1, ...t1Info },
        };
    });
    const tableData = {};
    poolsWithSymbolsAndDecimals.forEach((pool) => {
        const r0 = parseFloat(pool.t0.reserve).toFixed(2);
        const r1 = parseFloat(pool.t1.reserve).toFixed(2);
        tableData[pool.pair] = {
            Pool: `${pool.t0.symbol} / ${pool.t1.symbol}`,
            Reserves: `${r0} / ${r1}`,
        };
    });
    if (args.json) {
        console.log(poolsWithSymbolsAndDecimals);
    }
    else {
        console.table(tableData);
    }
};
exports.poolsTask = (0, config_1.task)("pools", "", main).addFlag("json", "Print the result in JSON format");
