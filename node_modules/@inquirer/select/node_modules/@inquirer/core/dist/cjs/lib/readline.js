"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.clearLine = exports.down = exports.up = exports.right = exports.left = void 0;
const ansi_escapes_1 = __importDefault(require("ansi-escapes"));
/**
 * Move cursor left by `x`
 * @param  {Readline} rl - Readline instance
 * @param  {Number}   x  - How far to go left (default to 1)
 */
function left(rl, x) {
    if (x > 0) {
        rl.output.write(ansi_escapes_1.default.cursorBackward(x));
    }
}
exports.left = left;
/**
 * Move cursor right by `x`
 * @param  {Readline} rl - Readline instance
 * @param  {Number}   x  - How far to go left (default to 1)
 */
function right(rl, x) {
    if (x > 0) {
        rl.output.write(ansi_escapes_1.default.cursorForward(x));
    }
}
exports.right = right;
/**
 * Move cursor up by `x`
 * @param  {Readline} rl - Readline instance
 * @param  {Number}   x  - How far to go up (default to 1)
 */
function up(rl, x) {
    if (x > 0) {
        rl.output.write(ansi_escapes_1.default.cursorUp(x));
    }
}
exports.up = up;
/**
 * Move cursor down by `x`
 * @param  {Readline} rl - Readline instance
 * @param  {Number}   x  - How far to go down (default to 1)
 */
function down(rl, x) {
    if (x > 0) {
        rl.output.write(ansi_escapes_1.default.cursorDown(x));
    }
}
exports.down = down;
/**
 * Clear current line
 * @param  {Readline} rl  - Readline instance
 * @param  {Number}   len - number of line to delete
 */
function clearLine(rl, len) {
    rl.output.write(ansi_escapes_1.default.eraseLines(len));
}
exports.clearLine = clearLine;
